#!/usr/bin/env python
# encoding: utf-8

VERSION = '0.0.1'
APPNAME = 'hexapod_controller'

srcdir = '.'
blddir = 'build'

from waflib.Build import BuildContext


def options(opt):
    opt.load('compiler_cxx')
    opt.load('compiler_c')


def configure(conf):
    conf.load('compiler_cxx')
    conf.load('compiler_c')

    if conf.env.CXX_NAME in ["icc", "icpc"]:
        common_flags = "-Wall -std=c++11"
        opt_flags = " -O3 -xHost  -march=native -mtune=native -unroll -fma -g"
    elif conf.env.CXX_NAME in ["clang"]:
        common_flags = "-Wall -std=c++11"
        opt_flags = " -O3 -march=native -g"
    else:
        if int(conf.env['CC_VERSION'][0]+conf.env['CC_VERSION'][1]) < 47:
            common_flags = "-Wall -std=c++0x"
        else:
            common_flags = "-Wall -std=c++11"
        opt_flags = " -O3 -march=native -g"

    all_flags = common_flags + opt_flags
    conf.env['CXXFLAGS'] = conf.env['CXXFLAGS'] + all_flags.split(' ')
    print conf.env['CXXFLAGS']


def build(bld):
    bld.program(features = 'cxx',
                install_path = None,
                source = 'src/hexapod_controller_simple.cpp',
                includes = './include',
                target = 'hexapod_controller_simple')

    bld.install_files('${PREFIX}/include/hexapod_controller', 'include/hexapod_controller/hexapod_controller_simple.hpp')

    bld.program(features = 'cxx',
                install_path = None,
                source = 'src/hexapod_controller_cartesian.cpp',
                includes = './include',
                target = 'hexapod_controller_cartesian')

    bld.install_files('${PREFIX}/include/hexapod_controller', 'include/hexapod_controller/hexapod_controller_cartesian.hpp')
    bld.install_files('${PREFIX}/include/hexapod_controller', 'include/hexapod_controller/cpg.hpp')
